include('bulbs/RockyBulb');
include('common/logger');
include('common/strategy');
include('common/utils');

global hasFiredOnce = false;

function Stuxnet() {
	initTurn();

	var enemy = getNearestLeekEnemy();
	var hasFired = false;
	var initialEnemy = enemy;
	var isInitialEnemy = enemy === initialEnemy;
	var isEnemyPoisoner = isPoisoner(initialEnemy);
	var shouldProtect = !isEnemyPoisoner || safeCount(getDangerousEnemies()) > 1;
	var me = getLeek();
	var minSafeLife = getTotalLife() / 2;
	var once = Once();
	var optimizer = Optimizer();
	var poisoned = isBadlyPoisoned();
	var totalLife = getTotalLife();

	if (getTurn() === 1) {
		say('Hello ' + getName(enemy) + ' :)');
	}

	debug('initialEnemy: ' + getName(initialEnemy));
	debug('turnsWithoutFire: ' + turnsWithoutFire);

	while (isAlive(initialEnemy)) {
		resetLogIndent();
		logInfo('');

		var arm = null;
		var shouldTry = optimizer();
		var target = enemy;

		debug('enemy: ' + getLeekName(enemy));
		debug('life: ' + getLife());
		debug('MP: ' + getMP());
		debug('TP: ' + getTP());
		logRemainingOperations();

		if (
			shouldTry() &&
			getLife() < minSafeLife &&
			canFire(CHIP_CURE, me)
		) {
			arm = CHIP_CURE;
			target = me;
		} else if (
			shouldTry() &&
			poisoned &&
			canFire(CHIP_ANTIDOTE, me)
		) {
			arm = CHIP_ANTIDOTE;
			target = me;
		} else if (
			shouldTry() &&
			shouldProtect &&
			canFire(CHIP_ARMOR, me)
		) {
			arm = CHIP_ARMOR;
			target = me;
		} else if (
			shouldTry() &&
			shouldProtect &&
			canFire(CHIP_SHIELD, me)
		) {
			arm = CHIP_SHIELD;
			target = me;
		} else if (
			shouldTry() &&
			isInitialEnemy &&
			canFire(CHIP_TOXIN, enemy)
		) {
			arm = CHIP_TOXIN;
		} else if (
			shouldTry() &&
			canFire(WEAPON_FLAME_THROWER, enemy)
		) {
			arm = WEAPON_FLAME_THROWER;
		} else if (
			shouldTry() && canFire(CHIP_VENOM, enemy)
		) {
			arm = CHIP_VENOM;
		} else if (
			shouldTry() &&
			canFire(CHIP_ROCKY_BULB, me)
		) {
			summonBulb(CHIP_ROCKY_BULB, RockyBulb, initialEnemy);
		} else if (shouldTry() && getNearestEnemy() !== enemy) {
			debug('change target');
			enemy = getNearestEnemy();
			optimizer = Optimizer();
			continue;
		} else if (
			shouldTry() &&
			!isInitialEnemy &&
			canFire(CHIP_SLOW_DOWN, initialEnemy)
		) {
			arm = CHIP_SLOW_DOWN;
			target = initialEnemy;
		} else if (
			shouldTry() &&
			canFire(CHIP_SLOW_DOWN, enemy)
		) {
			arm = CHIP_SLOW_DOWN;
		} else if (
			shouldTry() &&
			(hasFiredOnce || getLife() < totalLife) &&
			canFire(CHIP_VACCINE, me)
		) {
			arm = CHIP_VACCINE;
			target = me;
		} else if (
			shouldTry() && canFire(CHIP_ARMORING, me)
		) {
			arm = CHIP_ARMORING;
			target = me;
		} else if (
			shouldTry() &&
			getLife() < totalLife &&
			canFire(CHIP_CURE, me)
		) {
			arm = CHIP_CURE;
			target = me;
		} else if (
			shouldTry() && canFire(WEAPON_BROADSWORD, enemy)
		) {
			arm = WEAPON_BROADSWORD;
		} else if (
			shouldTry() &&
			getTP() > 0 &&
			getWeapon() !== WEAPON_FLAME_THROWER
		) {
			ensureWearingWeapon(WEAPON_FLAME_THROWER);
		} else {
			if (getMP() > 0) {
				move(initialEnemy);
			}
			updateTurnsWithoutFire(hasFired);
			break;
		}

		if (arm !== null) {
			var result = fire(arm, target);
			hasFired = result[0];
			var hasError = result[1];

			if (hasError) {
				shouldTry();
			} else if (hasFired && !hasFiredOnce) {
				hasFiredOnce = true;
			}
		}

		if (getAliveEnemiesCount() === 0) {
			say('Oups ^^');
		} else if (!isAlive(initialEnemy)) {
			debug('change target');
			enemy = getNearestLeekEnemy();
			initialEnemy = enemy;
		} else if (!isAlive(enemy)) {
			debug('change target');
			enemy = getNearestEnemy();
			optimizer = Optimizer();
		}
	}
}

Stuxnet();
