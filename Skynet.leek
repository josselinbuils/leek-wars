include('Common');

function punyBulbAI() {
    var summoner = getSummoner();

	debug('move: ' + moveTowardCell(getCellToFireWithChip(CHIP_BANDAGE, summoner)));
	useChip(CHIP_BANDAGE, summoner);
	useChip(CHIP_BANDAGE, summoner);
}

function rockyBulbAI() {
    var hasFired = false;
	var enemy = getNearestLeekEnemy();
	var me = getLeek();

	while (isAlive(enemy)) {
		var chip = null;
		var mp = getMP();
		var tp = getTP();
		var result;
		var target = null;

		if (canFireWithChip(CHIP_HELMET, me)) {
			chip = CHIP_HELMET;
			target = me;
		} else if (canFireWithChip(CHIP_ROCKFALL, enemy)) {	
			chip = CHIP_ROCKFALL;
			target = enemy;
		} else if (canFireWithChip(CHIP_ROCK, enemy)) {	
			chip = CHIP_ROCK;
			target = enemy;
		} else if (canFireWithChip(CHIP_PEBBLE, enemy)) {	
			chip = CHIP_PEBBLE;
			target = enemy;
		} else {
			if (hasFired) {
				if (tp > 0) {
					say('Sauve qui peut !');
				}
				runAway(enemy);
			} else if (getNearestEnemy() !== enemy) {
				debug('change target');
				enemy = getNearestEnemy();
				continue;
			} else if (mp > 0) {
				moveTowardCell(getCellToFireWithChip(CHIP_ROCKFALL, enemy));
			}
			break;
		}

		if (chip !== null) {
			debug('use ' + getChipName(chip));

			if (target !== me) {
				debug('move: ' + moveTowardCell(getCellToFireWithChip(chip, target)));
				hasFired = true;
			}

			result = useChip(chip, target);
		}

		if (result !== null) {
			showResult(result);

			if (result === USE_INVALID_POSITION && getMP() > 0) {
				// Why the fuck this can happen ???
				if (moveToward(enemy) === 0) {
					break;
				}
			} else if (result !== USE_SUCCESS && result !== USE_FAILED && result !== USE_CRITICAL) {
				break;
			}
		}
	}
}

function summonBulb(bulb, ai, enemy) {
	var enemyCell = getCell(enemy);
	var cell = getCell();
	var x = getCellX(cell);
	var y = getCellY(cell);

	var possibleCells = [getCellFromXY(x - 1, y + 2), getCellFromXY(x, y + 2), getCellFromXY(x + 1, y + 2), getCellFromXY(x - 2, y + 1), getCellFromXY(x + 2, y + 1), getCellFromXY(x - 2, y), getCellFromXY(x + 2, y), getCellFromXY(x - 2, y - 1), getCellFromXY(x + 2, y - 1), getCellFromXY(x - 1, y - 2), getCellFromXY(x, y - 2), getCellFromXY(x + 1, y - 2)];

	var emptyCells = arrayFilter(possibleCells, function (c) {
		return c !== null && isEmptyCell(c);
	});

	emptyCells = arraySort(emptyCells, function (a, b) {
		return getDistance(enemyCell, a) < getDistance(enemyCell, b) ? -1 : 1;
	});

	if (count(emptyCells) > 0) {
		summon(bulb, shift(emptyCells), ai);
	}
}

function Skynet() {
	var hasFired = false;
	var hasTriedToSummon = false;
	var enemy = getNearestLeekEnemy();
	var me = getLeek();
	var totalLife = getTotalLife();

	if (getWeapon() === null) {
		ensureWearingWeapon(WEAPON_FLAME_THROWER);
		say('Canarticho !');
	}

	if (getTurn() === 1) {
		summonBulb(CHIP_ROCKY_BULB, rockyBulbAI,  enemy);
	}

	while (isAlive(enemy)) {
		var chip = null;
		var result;
		var target = null;
		var weapon = null;

		debug('life: ' + getLife());
		debug('MP: ' + getMP());
		debug('TP: ' + getTP());

		if (canFireWithChip(CHIP_ARMOR, me)) {
			chip = CHIP_ARMOR;
			target = me;
		} else if (canFireWithChip(CHIP_SHIELD, me)) {
			chip = CHIP_SHIELD;
			target = me;
		} else if (canFireWithChip(CHIP_WALL, me)) {
			chip = CHIP_WALL;
			target = me;
		} else if (canFireWithChip(CHIP_TOXIN, enemy)) {	
			chip = CHIP_TOXIN;
			target = enemy;
		} else if (canFireWithWeapon(WEAPON_FLAME_THROWER, enemy)) {
			weapon = WEAPON_FLAME_THROWER;
		} else if (canFireWithChip(CHIP_VENOM, enemy)) {	
			chip = CHIP_VENOM;
			target = enemy;
		} else if (canFireWithChip(CHIP_TRANQUILIZER, enemy)) {	
			chip = CHIP_TRANQUILIZER;
			target = enemy;
		} else if (canFireWithWeapon(WEAPON_BROADSWORD, enemy)) {
			// In case the leek is blocked on a unique case
			weapon = WEAPON_BROADSWORD;
		} else if (canFireWithChip(CHIP_VACCINE, me)) {	
			chip = CHIP_VACCINE;	
			target = me;	
		} else if (getLife() < (totalLife * 3 / 4) && canFireWithChip(CHIP_CURE, me)) {
			chip = CHIP_CURE;
			target = me;
		} else if (!hasTriedToSummon && canFireWithChip(CHIP_PUNY_BULB, me)) {
			// Checks if it has already tried to summon to avoid infinite loops
			// when no empty cell is available
			hasTriedToSummon = true;
			summonBulb(CHIP_PUNY_BULB, punyBulbAI, enemy);
		} else {
			if (hasFired) {
				if (getTP() > 0) {
					say('Sauve qui peut !');
				}
				runAway(enemy);
			} else if (getNearestEnemy() !== enemy) {
				enemy = getNearestEnemy();
				continue;
			} else if (getTurn() > 1 && getMP() > 0) {
				var targetCell = getCellToFireWithWeapon(WEAPON_FLAME_THROWER, enemy);
				
				if (getCooldown(CHIP_TOXIN) === 0) {
					targetCell =  getCellToFireWithChip(CHIP_TOXIN, enemy);
				}

				if (getLife() === totalLife) {
					moveTowardCell(targetCell, 2);
				} else {
					moveTowardCell(targetCell);
				}
			}
			break;
		}

		if (weapon !== null) {
			debug('use ' + getWeaponName(weapon));
			debug('move: ' + moveTowardCell(getCellToFireWithWeapon(weapon, enemy)));
			ensureWearingWeapon(weapon);
			result = useWeapon(enemy);
			hasFired = true;
		} else if (chip !== null) {
			debug('use ' + getChipName(chip));

			if (target !== me) {
				debug('move: ' + moveTowardCell(getCellToFireWithChip(chip, target)));
				hasFired = true;
			}

			result = useChip(chip, target);
		}

		if (result !== null) {
			showResult(result);

			if (result === USE_INVALID_POSITION && getMP() > 0) {
				// Why the fuck this can happen ???
				if (moveToward(enemy) === 0) {
					break;
				}
			} else if (result !== USE_SUCCESS && result !== USE_FAILED && result !== USE_CRITICAL) {
				break;
			}
		}

		if (getAliveEnemiesCount() === 0) {
			say("Encore une victoire de canard !");
		}
	}
}

Skynet();
