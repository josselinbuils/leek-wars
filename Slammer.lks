include('../common/strategy');

function Slammer() {
	initTurn();

	var hasFired = false;
	var enemy = getNearestLeekEnemy();
	var me = getLeek();
	var optimizer = Optimizer();
	var summoner = getSummoner();

	if (getTurn() === 1) {
		say('Yop ' + getName(enemy) + ' :)');
		setWeapon(WEAPON_DOUBLE_GUN);
	}

	while (getAliveEnemiesCount() > 0) {
		resetLogIndent();
		logInfo('');

		var arm = null;
		var shouldTry = optimizer();
		var target = enemy;

		debug('enemy: ' + getLeekName(enemy));
		debug('life: ' + getLife());
		debug('MP: ' + getMP());
		debug('TP: ' + getTP());
		logRemainingOperations();

		if (
			shouldTry() &&
			canFire(CHIP_HELMET, me)
		) {
			arm = CHIP_HELMET;
			target = me;
		} else if (
			shouldTry() &&
			canFire(WEAPON_SHOTGUN, enemy)
		) {
			arm = WEAPON_SHOTGUN;
		} else if (
			shouldTry() &&
			canFire(CHIP_ROCK, enemy)
		) {
			arm = CHIP_ROCK;
		} else if (
			shouldTry() &&
			canFire(WEAPON_DOUBLE_GUN, enemy)
		) {
			arm = WEAPON_DOUBLE_GUN;
		} else if (
			shouldTry() &&
			canFire(CHIP_ICE, enemy)
		) {
			arm = CHIP_ICE;
		} else if (
			shouldTry() &&
			canFire(CHIP_SPARK, enemy)
		) {
			arm = CHIP_SPARK;
		} else if (
			shouldTry() &&
			getLife() < getTotalLife() &&
			canFire(CHIP_BANDAGE, me)
		) {
			arm = CHIP_BANDAGE;
			target = me;
		} else {
			if (getMP() > 0) {
				move(enemy);
			}
			updateTurnsWithoutFire(hasFired);
			break;
		}

		if (arm !== null) {
			var result = fire(arm, target);
			hasFired = result[0];
			var hasError = result[1];

			if (hasError) {
				shouldTry();
			}
		}
	}
}

Slammer();
