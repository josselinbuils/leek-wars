include('Common');

global hasFiredOnce = false;

function isBadlyPoisoned() {
	var poisonDammages = 0;

	for (var effect in getEffects()) {
		if (effect[0] === EFFECT_POISON) {
			poisonDammages += effect[1];
		}
	}
	return poisonDammages >= 150;
}

function icedBulbAI() {
	var hasFired = false;
	var enemy = getNearestLeekEnemy();
	var initialEnemy = enemy;
	var me = getLeek();
	var summoner = getSummoner();
	var totalTP = getTotalTP();

	while (getAliveEnemiesCount() > 0) {
		var chip = null;
		var mp = getMP();
		var tp = getTP();
		var result;
		var target = null;

		if (canFireWithChip(CHIP_ICEBERG, enemy)) {
			chip = CHIP_ICEBERG;
			target = enemy;
		} else if (canFireWithChip(CHIP_STALACTITE, enemy)) {
			chip = CHIP_STALACTITE;
			target = enemy;
		} else if (canFireWithChip(CHIP_ICE, enemy)) {
			chip = CHIP_ICE;
			target = enemy;
		} else if (canFireWithChip(CHIP_REFLEXES, summoner)) {
			chip = CHIP_REFLEXES;
			target = summoner;
		} else if (canFireWithChip(CHIP_REFLEXES, me)) {
			chip = CHIP_REFLEXES;
			target = me;
		} else if (!hasFired && getNearestEnemy() !== enemy) {
			debug('change target');
			enemy = getNearestEnemy();
			continue;
		} else {
			if (hasFired && enemy === initialEnemy) {
				runAway(enemy);
			} else if (mp > 0) {
				var preferredChip = CHIP_ICE;

				if (totalTP >= 7) {
					preferredChip = CHIP_ICEBERG;
				} else if (totalTP >= 6) {
					preferredChip = CHIP_STALACTITE;
				}

				sneak(initialEnemy, getCellToFireWithChip(preferredChip, initialEnemy));
			}
			break;
		}

		if (chip !== null) {
			debug('use ' + getChipName(chip));

			if (target !== me) {
				debug('move: ' + moveTowardCell(getCellToFireWithChip(chip, target)));
				hasFired = true;
			}

			result = useChip(chip, target);
		}

		if (result !== null) {
			showResult(result);

			if (result !== USE_SUCCESS && result !== USE_FAILED && result !== USE_CRITICAL) {
				break;
			}
		}

		if (!isAlive(initialEnemy)) {
			enemy = getNearestLeekEnemy();
			initialEnemy = enemy;
		}
	}
}

function summonBulb(bulb, ai, enemy) {
	var enemyCell = getCell(enemy);
	var cell = getCell();
	var x = getCellX(cell);
	var y = getCellY(cell);

	var possibleCells = [
		getCellFromXY(x, y - 2),
		getCellFromXY(x, y - 1),
		getCellFromXY(x, y + 1),
		getCellFromXY(x, y + 2),
		getCellFromXY(x - 2, y),
		getCellFromXY(x - 1, y),
		getCellFromXY(x + 1, y),
		getCellFromXY(x + 2, y),
		getCellFromXY(x - 1, y - 1),
		getCellFromXY(x - 1, y + 1),
		getCellFromXY(x + 1, y - 1),
		getCellFromXY(x + 1, y + 1),
	];

	var emptyCells = arrayFilter(possibleCells, function(c) {
		return c !== null && isEmptyCell(c);
	});

	emptyCells = arraySort(emptyCells, function(a, b) {
		return getDistance(enemyCell, a) < getDistance(enemyCell, b) ? -1 : 1;
	});

	if (count(emptyCells) > 0) {
		showResult(summon(bulb, shift(emptyCells), ai));
	} else {
		debug('No cell available for summon');
	}
}

function Skynet() {
	var hasFired = false;
	var hasTriedToSummon = false;
	var hasUsedAntidote = false;
	var enemy = getNearestLeekEnemy();
	var initialEnemy = enemy;
	var isEnemyPoisoner = getMagic(enemy) > getStrength(enemy);
	var me = getLeek();
	var poisoned = isBadlyPoisoned();
	var totalLife = getTotalLife();

	while (getAliveEnemiesCount() > 0) {
		var chip = null;
		var isInitialEnemy = enemy === initialEnemy;
		var result;
		var target = null;
		var weapon = null;

		debug('life: ' + getLife());
		debug('MP: ' + getMP());
		debug('TP: ' + getTP());

		if (poisoned && canFireWithChip(CHIP_ANTIDOTE, me)) {
			chip = CHIP_ANTIDOTE;
			target = me;
			hasUsedAntidote = true;
		} else if (poisoned && !hasUsedAntidote && canFireWithChip(CHIP_LIBERATION, me)) {
			chip = CHIP_LIBERATION;
			target = me;
			hasUsedAntidote = true;
		} else if (getLife() <= 350 && canFireWithChip(CHIP_REGENERATION, me)) {
			chip = CHIP_REGENERATION;
			target = me;
		} else if (!isEnemyPoisoner && canFireWithChip(CHIP_ARMOR, me)) {
			chip = CHIP_ARMOR;
			target = me;
		} else if (!isEnemyPoisoner && canFireWithChip(CHIP_SHIELD, me)) {
			chip = CHIP_SHIELD;
			target = me;
		} else if (isInitialEnemy && canFireWithChip(CHIP_TOXIN, enemy)) {
			chip = CHIP_TOXIN;
			target = enemy;
		} else if (canFireWithWeapon(WEAPON_FLAME_THROWER, enemy)) {
			weapon = WEAPON_FLAME_THROWER;
		} else if (isInitialEnemy && canFireWithChip(CHIP_VENOM, enemy)) {
			chip = CHIP_VENOM;
			target = enemy;
		} else if (canFireWithWeapon(WEAPON_DESTROYER, enemy)) {
			weapon = WEAPON_DESTROYER;
		} else if (isInitialEnemy && canFireWithChip(CHIP_SLOW_DOWN, enemy)) {
			chip = CHIP_SLOW_DOWN;
			target = enemy;
		} else if ((hasFiredOnce || getLife() < totalLife) && canFireWithChip(CHIP_VACCINE, me)) {
			chip = CHIP_VACCINE;
			target = me;
		} else if (getLife() < totalLife && canFireWithChip(CHIP_CURE, me)) {
			chip = CHIP_CURE;
			target = me;
		} else if (!hasTriedToSummon && canFireWithChip(CHIP_ICED_BULB, me)) {
			// Checks if it has already tried to summon to avoid infinite loops	
			// when no empty cell is available	
			hasTriedToSummon = true;
			summonBulb(CHIP_ICED_BULB, icedBulbAI, initialEnemy);
		} else if (!hasFired && getNearestEnemy() !== enemy) {
			enemy = getNearestEnemy();
			continue;
		} else if (getWeapon() === null && getTP() > 0) {
			ensureWearingWeapon(WEAPON_FLAME_THROWER);
		} else if (getTP() > 0) {
			say('Canarticho !');
		} else {
			if (hasFired && enemy === initialEnemy) {
				runAway(enemy);
			} else if (getMP() > 0) {
				var targetCell = getCellToFireWithWeapon(WEAPON_FLAME_THROWER, initialEnemy);

				if (getCooldown(CHIP_TOXIN) === 0) {
					targetCell = getCellToFireWithChip(CHIP_TOXIN, initialEnemy);
				}
				sneak(enemy, targetCell);
			}
			break;
		}

		if (weapon !== null) {
			debug('move: ' + moveTowardCell(getCellToFireWithWeapon(weapon, enemy)));
			debug('use ' + getWeaponName(weapon));
			ensureWearingWeapon(weapon);
			result = useWeapon(enemy);
			hasFired = true;
		} else if (chip !== null) {
			if (target !== me) {
				debug('move: ' + moveTowardCell(getCellToFireWithChip(chip, target)));
				hasFired = true;
			}
			debug('use ' + getChipName(chip));
			result = useChip(chip, target);
		}

		if (hasFired && !hasFiredOnce) {
			hasFiredOnce = true;
		}

		if (result !== null) {
			showResult(result);

			if (result !== USE_SUCCESS && result !== USE_FAILED && result !== USE_CRITICAL) {
				break;
			}
		}

		if (!isAlive(initialEnemy)) {
			if (getAliveEnemiesCount() === 0) {
				say("Encore une victoire de canard !");
			} else {
				enemy = getNearestLeekEnemy();
				initialEnemy = enemy;
			}
		}
	}
}

Skynet();
